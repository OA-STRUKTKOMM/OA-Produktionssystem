<?xml version="1.0" encoding="utf-8"?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
      <link rel="stylesheet" type="text/css" href="../Styles/HTWK-OAVerlag.css" />
      <title>VBA-Skript</title>
   </head>
   <body>
      <div class="appendix" id="b_9783966270021_app_007">
         <h1>Anhang G VBA-Skript</h1>
         
         
         <p class="DOI">DOI Kapitel:  <a href="http://doi.org/10.33968/9783966270021-13">http://doi.org/10.33968/9783966270021-13</a></p>
         
         
         
         
         <p class="normal">In diesem Anhang ist der gesamte Quellcode des VBA-Editors enthalten. Zum
            besseren Verständnis hinsichtlich der Bezeichnungen (insbesondere der
            Userform) wird empfohlen die Excel-Arbeitsmappe und den VBA-Editor zu
            öffnen. Es handelt sich hierbei lediglich um ein Modul und ein Formular. Das
            Modul (AutoOpen) sorgt dafür, dass die Userform startet, sobald die Excel-
            Tabelle geöffnet wird. Außerdem ist dieses Modul in der Schaltfläche
            "Eingabe starten" hinterlegt, um die Userform aus der Excel-Tabelle heraus
            zu starten. In "Userform1" sind alle Berechnungen und Eingaben
            hinterlegt.</p>
         
         <pre><code>AutoOpen:

Option Explicit   
<strong>Sub Auto_Open()</strong>
                   
'Blattschutz deaktivieren um Userform zu starten
	Sheets("Eingabe").Unprotect Password:="Masterarbeit"
                    
'Beim Starten der Excel-Arbeitsmappe Eingabemaske anzeigen
	UserForm1.Show
                    
'Erstes Tabellenblatt ("Eingabe") soll im Hintergrund aktiviert werden
	Worksheets("Eingabe").Activate
                    
'Blattschutz aktivieren und Eingabe nur über Userform erlauben
	Sheets("Eingabe").Protect Password:="Masterarbeit", _
	userinterfaceonly:=True
                    
End Sub
</code></pre>
         
         
         <p class="normal">Userform 1:</p>
         
         <pre><code>Option Explicit



                    
<strong>Private Sub UserForm_Initialize()</strong>
  
'Multipage allgemein
	'ohne Tabs angezeigen
		MultiPage1.Style = fmTabStyleNone
                    
 
'Page1 "Querschnitt"
	'Auf Seite 1 beginnen (VBA fängt bei 0 an zu zählen)
		MultiPage1.Value = 0
                    
	'Startwerte: aktuelle Werte beibehalten
		With Worksheets("Eingabe").Activate
			If Cells(4, 2).Value = 100 Then
				OptionButton2.Value = True
			Else
				OptionButton1 = True
			End If
                        
			TextBox1.Value = Cells(4, 2).Value
			TextBox2.Value = Cells(5, 2).Value
			TextBox3.Value = Cells(8, 2).Value
		End With
                    
'Eigengewicht anzeigen
'aus Excel Berechnung mit Wichte Stahlbeton = 25 kN/m<sup>3</sup>
	With Worksheets("Eingabe").Activate
		Label11.Caption = Cells(11, 2).Value
	End With
                    
'Startwerte Lasten ebenfalls beibehalten
	With Worksheets("Eingabe").Activate
		TextBox4.Value = Cells(12, 2).Value
		TextBox5.Value = Cells(13, 2).Value
		TextBox6.Value = Cells(14, 2).Value
	End With
                    
                    
'Page 3 "Beton" (Page 2 im Laufe der Bearbeitung entfallen)
	'Kombinationsfeld soll nur Werte für Normalbeton zulassen
		Worksheets("Daten").Activate
			UserForm1.ComboBox1.RowSource = "A5:A13"
			UserForm1.ComboBox1.Style = fmStyleDropDownList
		Worksheets("Eingabe").Activate
                    
	'Startwert Kombinationsfeld gemäß aktueller Auswahl
		With Worksheets("Eingabe").Activate
			UserForm1.ComboBox1.Value = Cells(21, 2).Value
		End With
                    
	'Druckfestigkeit in Abhängigkeit der Festigkeitsklasse ausgeben
		With Worksheets("Eingabe").Activate
			If UserForm1.ComboBox1.Value &lt;&gt; 0 Then
				Label35.Caption = Cells(22, 2).Value
			End If
		End With
                    
	'Beiwerte für Langzeitauswirkungen standardmäßig auf 0,85 festgelegt
		TextBox7.Value = 0.85
		TextBox8.Value = 0.85
                    
	'Anzeige:   'Bemessungsdruckfestigkeit
				'mittlere Druckfestigkeit
				'E-Modul
				'Grenzdehnung
				'Oberflächenzugfestigkeit
                    
		With Worksheets("Eingabe").Activate
			Label45.Caption = Round(Cells(26, 2), 2)
			Label50.Caption = Cells(27, 2)
			Label54.Caption = Cells(29, 2)
			Label58.Caption = Cells(30, 2)
			TextBox9.Value = Cells(28, 2)
		End With
                    
                    
'Page 4 "Betonstahl"
	'Startwerte: vorhandene Werte
		With Worksheets("Eingabe").Activate
		'Startwert Auswahl gerippter / glatter Betonstahl
			If Cells(3, 6).Value = "gerippt" Then
				OptionButton5.Value = True
			ElseIf Cells(3, 6).Value = "glatt" Then
				OptionButton6.Value = True
			Else
				OptionButton5.Value = False
				OptionButton6.Value = False
			End If
		'Startwert fyk, E-Modul, Dehnung
			TextBox10.Value = Cells(4, 6)
			TextBox11.Value = Cells(7, 6)
			TextBox12.Value = Cells(8, 6)
		'Startwert Verbundbedingungen
			If Cells(9, 6).Value = "gut" Then
				OptionButton7.Value = True
			ElseIf Cells(9, 6).Value = "mäßig" Then
				OptionButton8.Value = True
			Else
				OptionButton7.Value = False
				OptionButton8.Value = False
			End If
		End With
                    
	'Startwert Spinbuttons + in zugehörige Textboxen übernehmen
		With Worksheets("Eingabe").Activate
			SpinButton1.Value = Cells(21, 6)
			SpinButton2.Value = Cells(35, 6)
		End With
		TextBox26.Value = SpinButton1.Value
		TextBox28.Value = SpinButton2.Value
                    
	'Min-/Max-Werte Spinbuttons (Betonstahl Stababstände)
		SpinButton1.Min = 1
		SpinButton1.Max = 100
		SpinButton2.Min = 1
		SpinButton2.Max = 100
                    
	'Doppelstab ja/nein
		If Sheets("Eingabe").Cells(22, 6).Value = 2 Then
			CheckBox2.Value = True
		ElseIf Sheets("Eingabe").Cells(22, 6).Value = 1 Then
			CheckBox2.Value = False
		End If
                    
		If Sheets("Eingabe").Cells(36, 6).Value = 2 Then
			CheckBox3.Value = True
		ElseIf Sheets("Eingabe").Cells(36, 6).Value = 1 Then
			CheckBox3.Value = False
		End If
                    
	'Page 5 "CFK-Lamelle"
		'Auswahl in Combobox2 ("System")
			Worksheets("Daten").Activate
			UserForm1.ComboBox2.RowSource = "A22:A29"
			UserForm1.ComboBox2.Style = fmStyleDropDownList
			Worksheets("Eingabe").Activate
                    
		'Startwert "System" soll aktueller Auswahl entsprechen
			With Worksheets("Eingabe").Activate
				UserForm1.ComboBox2.Value = Cells(3, 10)
			End With
                    
		'statische Höhe CFK-Lamelle soll aktuellem Wert entsprechen
			With Worksheets("Eingabe").Activate
				TextBox32.Value = Cells(4, 10)
			End With
                    
		'Verbundwerte in Userform übernehmen
			TextBox37.Value = Round(Cells(20, 10).Value, 3)
			TextBox38.Value = Round(Cells(21, 10).Value, 3)
			TextBox39.Value = Round(Cells(22, 10).Value, 3)
				If Cells(24, 10) = "ja" Then
					CheckBox1.Value = True
					TextBox37.Enabled = False
					TextBox38.Enabled = False
					TextBox39.Enabled = False
				ElseIf Cells(24, 10) = "nein" Then
					CheckBox1.Value = False
				End If
                        
	End Sub
</code></pre>
         <a id="b_9783966270021_fig_067"></a><figure><img src="../Images/b_9783966270021_fig_067.jpg" alt="Bildquelle:../Images/b_9783966270021_fig_067.jpg" /><figcaption><label>Abb. G.1</label>
               Userform Seite 1
                (DOI: <a href="http://doi.org/10.33968/9783966270021-13-A-01">http://doi.org/10.33968/9783966270021-13-A-01</a>)</figcaption>
         </figure>
         
         <pre><code>
<strong>Private Sub OptionButton2_Click()</strong>
                    
'bei Auswahl einachsig gespannte Platte:
	'Breite = 100 cm
	'Eingabefeld sperren
	'grau hinterlegen um Sperrung zu kennzeichnen
		TextBox1.Value = 100
		TextBox1.Enabled = False
                    
End Sub
                    
<strong>Private Sub OptionButton1_Click()</strong>
                    
'bei Auswahl Biegebalken Breite freigeben
	TextBox1.Enabled = True
                    
End Sub
                    
<strong>Private Sub TextBox1_Change()</strong>
                    
'Begrenzung der Textbox1 auf Zahlenwerte
	If TextBox1.Value = "" Then
		With Worksheets("Eingabe").Activate
		Cells(4, 2) = 0
	End With
	ElseIf Not IsNumeric(TextBox1) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox1.Value = 40
	Else
		With Worksheets("Eingabe").Activate
			Cells(4, 2) = TextBox1.Value * 1
		End With
	End If
                    
'neues Eigengewicht anzeigen
	With Worksheets("Eingabe").Activate
		Label11.Caption = Cells(11, 2).Value
	End With            
End Sub
         
		 
<strong>Private Sub TextBox2_Change()</strong>
                    
'Begrenzung der Textbox2 auf Zahlenwerte
	If TextBox2.Value = "" Then
		Cells(5, 2) = 0
	ElseIf Not IsNumeric(TextBox2) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox2.Value = 60
	Else
		With Worksheets("Eingabe").Activate
			Cells(5, 2) = TextBox2.Value * 1
		End With
	End If
                    
'neues Eigengewicht anzeigen
	With Worksheets("Eingabe").Activate
		Label11.Caption = Cells(11, 2).Value
	End With                 
End Sub
                    				
<strong>Private Sub TextBox3_Change()</strong>
                    
'Begrenzung der Textbox3 auf Zahlenwerte
	If TextBox3.Value = "" Then
		Cells(8, 2) = 0
	ElseIf Not IsNumeric(TextBox3) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox3.Value = 10
	Else
		With Worksheets("Eingabe").Activate
			Cells(8, 2) = TextBox3.Value * 1
		End With
	End If
                    
End Sub
                    
                    
<strong>Private Sub TextBox4_Change()</strong>
                    
'Begrenzung der Textbox4 auf Zahlenwerte
	If TextBox4.Value = "" Then
		Cells(12, 2) = 0
	ElseIf Not IsNumeric(TextBox4) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox4.Value = 0
	Else
		With Worksheets("Eingabe").Activate
			Cells(12, 2) = TextBox4.Value * 1
		End With
	End If
                    
End Sub
                    
                    
<strong>Private Sub TextBox5_Change()</strong>
                    
'Begrenzung der Textbox5 auf Zahlenwerte
	If TextBox5.Value = "" Then
		Cells(13, 2) = 0
	ElseIf Not IsNumeric(TextBox5) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox5.Value = 2
	Else
		With Worksheets("Eingabe").Activate
			Cells(13, 2) = TextBox5.Value * 1
		End With
	End If
                    
End Sub
                    
                    
<strong>Private Sub TextBox6_Change()</strong>
                    
'Begrenzung der Textbox6 auf Zahlenwerte
	If TextBox6.Value = "" Then
		Cells(14, 2) = 0
	ElseIf Not IsNumeric(TextBox6) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox6.Value = 5
	Else
		With Worksheets("Eingabe").Activate
			Cells(14, 2) = TextBox6.Value * 1
		End With
	End If
                    
End Sub
                    
                    
<strong>Private Sub CommandButton4_Click()</strong>
                    
'CommandButton4 = Abbrechen (Page1)
Unload UserForm1
                    
End Sub
                    
                    
<strong>Private Sub CommandButton1_Click()</strong>
                    
'Page 3 "Beton" - Page 2 ist im Laufe der Bearbeitung entfallen
'Anzeige Teilsicherheitsbeiwert Beton
	With Worksheets("Eingabe").Activate
		Label43.Caption = Cells(25, 2)
	End With
                    
'weiter zur nächsten Seite
	MultiPage1.Value = MultiPage1.Value + 1
                    
End Sub
</code></pre>
         <a id="b_9783966270021_fig_068"></a><figure><img src="../Images/b_9783966270021_fig_068.jpg" alt="Bildquelle:../Images/b_9783966270021_fig_068.jpg" /><figcaption><label>Abb. G.2</label>
               Userform Seite 2
                (DOI: <a href="http://doi.org/10.33968/9783966270021-13-A-02">http://doi.org/10.33968/9783966270021-13-A-02</a>)</figcaption>
         </figure>
         
         <pre><code>
<strong>Private Sub ComboBox1_Change()</strong>
                    
'neuen Wert in Excel übernehmen
'Betondruckfestigkeit bei Änderung der Festigkeitsklasse anpassen
	With Worksheets("Eingabe").Activate
		Cells(21, 2).Value = UserForm1.ComboBox1.Value
		Label35.Caption = Cells(22, 2)
	End With
                    
	'Druckfestigkeit etc. neu berechnen und anzeigen
	With Worksheets("Eingabe").Activate
		Label45.Caption = Round(Cells(26, 2), 2)
		Label50.Caption = Cells(27, 2)
		Label54.Caption = Cells(29, 2)
		Label58.Caption = Cells(30, 2)
	End With
                    
End Sub
                    
                    
<strong>Private Sub TextBox7_Change()</strong>
                    
'Begrenzung der Textbox7 auf Zahlenwerte
                    
	With Worksheets("Eingabe").Activate
		If TextBox7.Value = "" Then
		Cells(23, 2).Value = 0
                    
		ElseIf Not IsNumeric(TextBox7) Then
                    
			MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
			"Hinweis"
                    
			TextBox7.Value = 0.85
			Cells(23, 2).Value = TextBox7.Value * 1
		Else
			Cells(23, 2).Value = TextBox7.Value * 1
		End If
	End With
                    
'Bemessungsdruckfestigkeit neu berechnen und anzeigen
	With Worksheets("Eingabe").Activate
		Label45.Caption = Round(Cells(26, 2), 2)
	End With
                    
End Sub
                    
                    
<strong>Private Sub TextBox8_Change()</strong>
                    
'Begrenzung der Textbox8 auf Zahlenwerte
	With Worksheets("Eingabe").Activate
		If TextBox8.Value = "" Then
		Cells(24, 2).Value = 0
                    
		ElseIf Not IsNumeric(TextBox8) Then
                    
			MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
			"Hinweis"
                    
			TextBox8.Value = 0.85
			Cells(24, 2).Value = TextBox8.Value * 1
		Else
			Cells(24, 2).Value = TextBox8.Value * 1
		End If
	End With
                    
End Sub
                    
<strong>Private Sub TextBox9_Change()</strong>
                    
'Begrenzung der Textbox9 auf Zahlenwerte
                    
	With Worksheets("Eingabe").Activate
		If TextBox9.Value = "" Then
			Cells(28, 2).Value = 0
		ElseIf Not IsNumeric(TextBox9) Then
			MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
			"Hinweis"
			TextBox9.Value = 2
			Cells(28, 2).Value = TextBox9.Value * 1
		Else
			Cells(28, 2).Value = TextBox9.Value * 1
		End If
	End With
                    
End Sub
                    
                    
<strong>Private Sub CommandButton5_Click()</strong>
                    
'Eine Seite zurück
	MultiPage1.Value = MultiPage1.Value - 1
                    
End Sub
                    


					
<strong>Private Sub CommandButton6_Click()</strong>
                    
'Die Beiwerte der Langzeitauswirkungen sollen begrenzt werden.
	'Langzeitauswirkungen auf die Betondruckfestigkeit
	If TextBox7.Value &gt; 1 Then
		MsgBox "Ungültiger Beiwert für Langzeitauswirkungen", _
		vbOKOnly + vbCritical, "Achtung!"
		MultiPage1.Value = MultiPage1.Value
		GoTo SubEnde
	ElseIf TextBox7.Value &lt; 0.85 Then
		MsgBox "Ungültiger Beiwert für Langzeitauswirkungen", _
		vbOKOnly + vbCritical, "Achtung!"
		MultiPage1.Value = MultiPage1.Value
		GoTo SubEnde
	ElseIf TextBox7.Value &lt;&gt; 0.85 Then
		MsgBox "Im Allgemeinen ist der Beiwert für Langzeit" _
		&amp; "auswirkungen zu 0,85 anzunehmen. Nur in " _
		&amp; "begründeten Fällen darf hiervon abgewichen werden.", _
		vbOKOnly + vbInformation, "Hinweis"
	Else
		'Wert liegt genau bei 0,85
	End If   
                    
	'Langzeitauswirkungen auf die Betonzugfestigkeit
	If TextBox8.Value &gt; 1 Then
		MsgBox "Ungültiger Beiwert für Langzeitauswirkungen", _
		vbOKOnly + vbCritical, "Achtung!"
		MultiPage1.Value = MultiPage1.Value
		GoTo SubEnde
	ElseIf TextBox8.Value &lt; 0.85 Then
		MsgBox "Ungültiger Beiwert für Langzeitauswirkungen", _
		vbOKOnly + vbCritical, "Achtung!"
		MultiPage1.Value = MultiPage1.Value
		GoTo SubEnde
	ElseIf TextBox8.Value &lt;&gt; 0.85 Then
		MsgBox "Im Allgemeinen ist der Beiwert für Langzeit" _
		&amp; "auswirkungen zu 0,85 anzunehmen. Nur in " _
		&amp; "begründeten Fällen darf hiervon abgewichen werden.", _
		vbOKOnly + vbInformation, "Hinweis"
	Else
		'Wert liegt genau bei 0,85
	End If
                    
                    
'Oberflächenzugfestigkeit ist gemäß Richtlinie begrenzt auf 1,0 - 4,0 N/mm²
	If TextBox9.Value &gt; 4 Then
                    
		MsgBox "Ungültiger Wert." &amp; vbNewLine _
		&amp; "Zulässiger Bereich: 1,0 - 4,0 N/mm².", vbOKOnly + vbCritical, _
		"Achtung!"
                    
		MultiPage1.Value = MultiPage1.Value
		GoTo SubEnde
	ElseIf TextBox9.Value &lt; 1 Then
                    
		MsgBox "Ungültiger Wert." &amp; vbNewLine _
		&amp; "Zulässiger Bereich: 1,0 - 4,0 N/mm².", vbOKOnly + vbCritical, _
		"Achtung!"
                    
		MultiPage1.Value = MultiPage1.Value
		GoTo SubEnde
	End If
                    
                    
'Nächste Seite der Multipage aufrufen
	MultiPage1.Value = MultiPage1.Value + 1
                    
'Die folgende Seite soll anzeigen:
	'den Teilsicherheitsbeiwert
		Label75.Caption = Cells(5, 6)
                    
	'die Bemessungsstreckgrenze
		Label79.Caption = Round(Cells(6, 6), 2)
                    
	'wenn Biegebalken, dann Eingabe Durchmesser + Anzahl
	'wenn Platte dann Eingabe Durchmesser + Abstand
		If OptionButton1.Value = True Then
			MultiPage2.Value = 0        'VBA beginnt bei 0 zu zählen
		Else
			MultiPage2.Value = 1
		End If
	'für angezeigte Seite (Multipage2) aktuelle Werte übernehmen
	'andere Werte = 0 , da Bedingung in Excel-Berechnung eingeht
		With Worksheets("Eingabe").Activate
			TextBox33.Value = Cells(12, 6)
			TextBox35.Value = Cells(12, 6)
			TextBox34.Value = Cells(26, 6)
			TextBox36.Value = Cells(26, 6)
                    
			If OptionButton1.Value = True Then
				TextBox13.Value = Cells(14, 6)
				TextBox14.Value = Cells(13, 6)
				TextBox15.Value = Cells(16, 6)
				TextBox16.Value = Cells(15, 6)
				TextBox17.Value = Cells(18, 6)
				TextBox18.Value = Cells(17, 6)
				TextBox19.Value = Cells(28, 6)
				TextBox20.Value = Cells(27, 6)
				TextBox21.Value = Cells(30, 6)
				TextBox22.Value = Cells(29, 6)
				TextBox23.Value = Cells(32, 6)
				TextBox24.Value = Cells(31, 6)
			Else
				TextBox13.Value = 0
				TextBox14.Value = 0
				TextBox15.Value = 0
				TextBox16.Value = 0
				TextBox17.Value = 0
				TextBox18.Value = 0
				TextBox19.Value = 0
				TextBox20.Value = 0
				TextBox21.Value = 0
				TextBox22.Value = 0
				TextBox23.Value = 0
				TextBox24.Value = 0
			End If
                    
			If OptionButton2.Value = True Then
				TextBox25.Value = Cells(20, 6)
				TextBox26.Value = Cells(21, 6)
				TextBox27.Value = Cells(34, 6)
				TextBox28.Value = Cells(35, 6)
			Else
				TextBox25.Value = 0
				TextBox26.Value = Cells(21, 6)
				TextBox27.Value = 0
				TextBox28.Value = Cells(35, 6)
			End If
			TextBox40.Value = Cells(40, 6)
		End With                
SubEnde:                  
End Sub
</code></pre>
         <a id="b_9783966270021_fig_069"></a><figure><img src="../Images/b_9783966270021_fig_069.jpg" alt="Bildquelle:../Images/b_9783966270021_fig_069.jpg" /><figcaption><label>Abb. G.3</label>
               Userform Seite 3.1
                (DOI: <a href="http://doi.org/10.33968/9783966270021-13-A-03">http://doi.org/10.33968/9783966270021-13-A-03</a>)</figcaption>
         </figure>
         <a id="b_9783966270021_fig_070"></a><figure><img src="../Images/b_9783966270021_fig_070.jpg" alt="Bildquelle:../Images/b_9783966270021_fig_070.jpg" /><figcaption><label>Abb. G.4</label>
               Userform Seite 3.2
                (DOI: <a href="http://doi.org/10.33968/9783966270021-13-A-04">http://doi.org/10.33968/9783966270021-13-A-04</a>)</figcaption>
         </figure>
         
         <pre><code>
<strong>Private Sub OptionButton5_Click()</strong>

'Bei Auswahl "gerippt", soll gerippt eingetragen werden
	With Worksheets("Eingabe").Activate
		Cells(3, 6) = "gerippt"
	End With               
End Sub
                    
                    
<strong>Private Sub OptionButton6_Click()</strong>
                    
'Bei Auswahl "glatt" soll glatt eingetragen werden
	With Worksheets("Eingabe").Activate
		Cells(3, 6) = "glatt"
	End With                  
End Sub
                   
<strong>Private Sub TextBox10_Change()</strong>
                    
'Textbox10 auf Zahlenwerte beschränken und anschließend Werte übernehmen
                            
	If TextBox10.Value = "" Then
		TextBox10.Value = 0
	ElseIf Not IsNumeric(TextBox10) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox10.Value = 500
	End If
		With Worksheets("Eingabe").Activate
			Cells(4, 6).Value = TextBox10.Value * 1
	End With
                        
'Bemessungszugfestigkeit neu berechnen und anzeigen
	With Worksheets("Eingabe").Activate
		Label79.Caption = Round(Cells(6, 6), 2)
	End With
                    
End Sub
                    
                    
<strong>Private Sub TextBox11_Change()</strong>
                    
'Textbox11 auf Zahlenwerte beschränken und anschließend Werte übernehmen
	If TextBox11.Value = "" Then
		TextBox11.Value = 0
	ElseIf Not IsNumeric(TextBox11) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox11.Value = 200000
	End If
                        
	With Worksheets("Eingabe").Activate
		Cells(7, 6).Value = TextBox11.Value * 1
	End With
                    
End Sub
                    
         

		 
<strong>Private Sub TextBox12_Change()</strong>
                    
'Textbox12 auf Zahlenwerte beschränken und anschließend Werte übernehmen
	If TextBox12.Value = "" Then
		TextBox12.Value = 0
	ElseIf Not IsNumeric(TextBox12) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox12.Value = 25
	End If
                        
	With Worksheets("Eingabe").Activate
		Cells(8, 6).Value = TextBox12.Value * 1
	End With
                    
End Sub
                    
                    
<strong>Private Sub TextBox13_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox13.Value = "" Then
		TextBox13.Value = 0
                        ElseIf Not IsNumeric(TextBox13) Then
	MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox13.Value = 0
		End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox14_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox14.Value = "" Then
		TextBox14.Value = 0
	ElseIf Not IsNumeric(TextBox14) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox14.Value = 0
	End If
                        
End Sub                                       
<strong>Private Sub TextBox15_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox15.Value = "" Then
		TextBox15.Value = 0
	ElseIf Not IsNumeric(TextBox15) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox15.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox16_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox16.Value = "" Then
		TextBox16.Value = 0
	ElseIf Not IsNumeric(TextBox16) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox16.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox17_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox17.Value = "" Then
		TextBox17.Value = 0
	ElseIf Not IsNumeric(TextBox17) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox17.Value = 0
	End If
                        
End Sub
                    
           
		   
		   
<strong>Private Sub TextBox18_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox18.Value = "" Then
		TextBox18.Value = 0
	ElseIf Not IsNumeric(TextBox18) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox18.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox19_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox19.Value = "" Then
		TextBox19.Value = 0
	ElseIf Not IsNumeric(TextBox19) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox19.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox20_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox20.Value = "" Then
		TextBox20.Value = 0
	ElseIf Not IsNumeric(TextBox20) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox20.Value = 0
	End If
                        
End Sub
                    
     
	 
	 
<strong>Private Sub TextBox21_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox21.Value = "" Then
		TextBox21.Value = 0
	ElseIf Not IsNumeric(TextBox21) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox21.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox22_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox22.Value = "" Then
		TextBox22.Value = 0
	ElseIf Not IsNumeric(TextBox22) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox22.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox23_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox23.Value = "" Then
		TextBox23.Value = 0
	ElseIf Not IsNumeric(TextBox23) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox23.Value = 0
	End If
                        
End Sub
                    
        

		
<strong>Private Sub TextBox24_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox24.Value = "" Then
		TextBox24.Value = 0
	ElseIf Not IsNumeric(TextBox24) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox24.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox25_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox25.Value = "" Then
		TextBox25.Value = 0
	ElseIf Not IsNumeric(TextBox25) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox25.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox26_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox26.Value = "" Then
		TextBox26.Value = 15
	ElseIf Not IsNumeric(TextBox26) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox26.Value = 15
	End If
                        
End Sub
                    
              

			  
<strong>Private Sub TextBox27_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox27.Value = "" Then
		TextBox27.Value = 0
	ElseIf Not IsNumeric(TextBox27) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox27.Value = 0
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox28_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox28.Value = "" Then
		TextBox28.Value = 15
	ElseIf Not IsNumeric(TextBox28) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox28.Value = 15
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox33_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox33.Value = "" Then
		'nothing
	ElseIf Not IsNumeric(TextBox33) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox33.Value = 0.9 * Cells(5, 2)
	End If
                        
End Sub
                    
   

   
<strong>Private Sub TextBox34_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox34.Value = "" Then
		'nothing
	ElseIf Not IsNumeric(TextBox34) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox34.Value = 0.1 * Cells(5, 2)
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox35_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox35.Value = "" Then
		'nothing
	ElseIf Not IsNumeric(TextBox35) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox35.Value = 0.9 * Cells(5, 2)
	End If
                        
End Sub
                    
                    
<strong>Private Sub TextBox36_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox36.Value = "" Then
		'nothing
	ElseIf Not IsNumeric(TextBox36) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox36.Value = 0.1 * Cells(5, 2)
	End If
                        
End Sub
                    
         

		 
<strong>Private Sub TextBox40_Change()</strong>
                    
'auf Zahlenwerte beschränken (+leere Textbox = 0)
	If TextBox40.Value = "" Then
		Cells(40, 6) = 0
	ElseIf Not IsNumeric(TextBox40) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein.", vbInformation, _
		"Hinweis"
		TextBox40.Value = 3
	End If
                        
End Sub
                    
                    
<strong>Private Sub OptionButton7_Click()</strong>
                    
'Bei Auswahl "gut", soll gut eingetragen werden
	With Worksheets("Eingabe").Activate
		Cells(9, 6) = "gut"
	End With
                    
End Sub
                    
                    
<strong>Private Sub OptionButton8_Click()</strong>
                    
'Bei Auswahl "mäßig", soll mäßig eingetragen werden
	With Worksheets("Eingabe").Activate
		Cells(9, 6) = "mäßig"
	End With
                    
End Sub
                    
                    
<strong>Private Sub SpinButton1_Change()</strong>
                    
'Verknüpfung Spinbutton mit Textbox
	TextBox26.Value = SpinButton1.Value
                    
End Sub
                    
   

   
<strong>Private Sub SpinButton2_Change()</strong>
                    
'Verknüpfung Spinbutton mit Textbox
	TextBox28.Value = SpinButton2.Value
                        
End Sub
                    
                    
<strong>Private Sub CheckBox2_Click()</strong>
                    
	If CheckBox2.Value = True Then
		Sheets("Eingabe").Cells(22, 6).Value = 2
	Else
		Sheets("Eingabe").Cells(22, 6).Value = 1
	End If
                    
End Sub
                    
                    
<strong>Private Sub CheckBox3_Click()</strong>
                    
	If CheckBox3.Value = True Then
		Sheets("Eingabe").Cells(36, 6).Value = 2
	Else
		Sheets("Eingabe").Cells(36, 6).Value = 1
	End If
                    
End Sub
                    
                    
<strong>Private Sub CommandButton7_Click()</strong>
                    
'Eine Seite zurück
	MultiPage1.Value = MultiPage1.Value - 1
                    
End Sub
                    
                    
<strong>Private Sub CommandButton8_Click()</strong>
                    
'Werte übernehmen
	With Worksheets("Eingabe").Activate
		Cells(14, 6) = TextBox13.Value * 1
		Cells(13, 6) = TextBox14.Value * 1
		Cells(16, 6) = TextBox15.Value * 1
		Cells(15, 6) = TextBox16.Value * 1
		Cells(18, 6) = TextBox17.Value * 1
		Cells(17, 6) = TextBox18.Value * 1
		Cells(28, 6) = TextBox19.Value * 1
		Cells(27, 6) = TextBox20.Value * 1
		Cells(30, 6) = TextBox21.Value * 1
		Cells(29, 6) = TextBox22.Value * 1
		Cells(32, 6) = TextBox23.Value * 1
		Cells(31, 6) = TextBox24.Value * 1
		Cells(20, 6) = TextBox25.Value * 1
		Cells(21, 6) = TextBox26.Value * 1
		Cells(34, 6) = TextBox27.Value * 1
		Cells(35, 6) = TextBox28.Value * 1
		If MultiPage2.Value = 1 Then
			Cells(12, 6) = TextBox33.Value * 1
			Cells(26, 6) = TextBox34.Value * 1
		Else
			Cells(12, 6) = TextBox35.Value * 1
			Cells(26, 6) = TextBox36.Value * 1
		End If
		Cells(40, 6) = TextBox40.Value * 1
	End With
                    
'statische Höhe (Bewehrung) muss kleiner als die Querschnittshöhe sein.
'und: Nächste Seite der Multipage aufrufen
                    
	If TextBox33.Value * 1 &gt; Cells(5, 2).Value _
		And OptionButton2.Value = True Then
			MsgBox _
			"Die statische Höhe muss kleiner als die Querschnittshöhe sein!", _
			vbExclamation, "Hinweis: Untere Bewehrungslage"
			TextBox33.Value = 0.9 * Cells(5, 2)
			Cells(12, 6).Value = TextBox33.Value * 1
			MultiPage1.Value = MultiPage1.Value
	ElseIf TextBox34.Value * 1 &gt; Cells(5, 2).Value _
		And OptionButton2.Value = True Then
			MsgBox _
			"Die statische Höhe muss kleiner als die Querschnittshöhe sein!", _
			vbExclamation, "Hinweis: Obere Bewehrungslage"
			TextBox34.Value = 0.1 * Cells(5, 2)
			Cells(26, 6).Value = TextBox34.Value * 1
			MultiPage1.Value = MultiPage1.Value
	ElseIf TextBox35.Value * 1 &gt; Cells(5, 2).Value _
		And OptionButton1.Value = True Then
			MsgBox _
			"Die statische Höhe muss kleiner als die Querschnittshöhe sein!", _
			vbExclamation, "Hinweis: Untere Bewehrungslage"
			TextBox35.Value = 0.9 * Cells(5, 2)
			Cells(12, 6).Value = TextBox35.Value * 1
			MultiPage1.Value = MultiPage1.Value
	ElseIf TextBox36.Value * 1 &gt; Cells(5, 2).Value _
		And OptionButton1.Value = True Then
			MsgBox _
			"Die statische Höhe muss kleiner als die Querschnittshöhe sein!", _
			vbExclamation, "Hinweis: Obere Bewehrungslage"
			TextBox36.Value = 0.1 * Cells(5, 2)
			Cells(26, 6).Value = TextBox36.Value * 1
			MultiPage1.Value = MultiPage1.Value
	Else
		MultiPage1.Value = MultiPage1.Value + 1
	End If
                            
'Hinweis: fyd, E-Modul und zul. Grenzdehnung i.A. vorgegeben.
	If TextBox10 &lt;&gt; 500 Then
		MsgBox "Im Allgemeinen gilt für die Bemessung nach EC2 in " _
		&amp; "Zusammenhang mit dem NA eine charakteristische Zugfestigkeit" _
		&amp; " des Betonstahls von 500 N/mm².", vbExclamation + vbOKOnly, _
		"Hinweis"
	End If
                        
	If TextBox11 &lt;&gt; 200000 Then
		MsgBox "Im Allgemeinen beträgt der E-Modul 200.000 N/mm² " _
		&amp; "für die Bemessung nach EC2.", vbExclamation + vbOKOnly, _
		"Hinweis"
	End If
                        
	If TextBox12 &lt;&gt; 25 Then
		MsgBox "Im Allgemeinen ist die rechnerisch zulässige " _
		&amp; "Grenzdehnung auf 25 ‰ zu fixieren.", _
		vbExclamation + vbOKOnly, "Hinweis"
	End If
                    
End Sub
</code></pre>
         <a id="b_9783966270021_fig_071"></a><figure><img src="../Images/b_9783966270021_fig_071.jpg" alt="Bildquelle:../Images/b_9783966270021_fig_071.jpg" /><figcaption><label>Abb. G.5</label>
               Userform Seite 4
                (DOI: <a href="http://doi.org/10.33968/9783966270021-13-A-05">http://doi.org/10.33968/9783966270021-13-A-05</a>)</figcaption>
         </figure>
         
         <pre><code>
<strong>Private Sub ComboBox2_Change()</strong>

'Wert übernehmen und Eigenschaften der gewählten CFK-Lamelle anzeigen
	Worksheets("Eingabe").Activate
	Cells(3, 10) = UserForm1.ComboBox2.Value
	UserForm1.Label153.Caption = Cells(5, 10)
	UserForm1.Label157.Caption = Cells(7, 10)
	UserForm1.Label170.Caption = Cells(6, 10)
	UserForm1.Label174.Caption = Round(Cells(8, 10), 1)
	UserForm1.Label178.Caption = Cells(9, 10)
	UserForm1.Label179.Caption = Cells(10, 10)
	UserForm1.Label188.Caption = Cells(11, 10)
	UserForm1.Label192.Caption = Round(Cells(12, 10), 1)
                    
End Sub
                    
          
          
<strong>Private Sub TextBox32_Change()</strong>
                    
'Eingabe direkt übernehmen
	With Worksheets("Eingabe").Activate
		Cells(4, 10) = TextBox32.Value
	End With
                        
'auf Zahlenwerte beschränken
	If TextBox32.Value = "" Then
		'nothing
	ElseIf Not IsNumeric(TextBox32) Then
		MsgBox "Bitte geben Sie einen Zahlenwert ein", vbInformation, _
		"Hinweis"
		Worksheets("Eingabe").Activate
		TextBox32.Value = Cells(5, 2)
	End If
                        
End Sub
                    
                    
<strong>Private Sub CheckBox1_Click()</strong>
                    
'bei click und true Werte nach RV K berechnen und Eingabe sperren
'bei click und false Werte frei eingeben mit Startwerten aus Excel
	With Worksheets("Eingabe").Activate
		If CheckBox1.Value = True Then
			Range("J20").Formula = "=0.366*(B23*B27*B24*B28)^(0.5)"
			Range("J21").Value = 0.201
			Range("J22").Formula = "=10.8*B23*B27^(-0.89)"
			TextBox37.Enabled = False
			TextBox38.Enabled = False
			TextBox39.Enabled = False
			Cells(24, 10) = "ja"
		ElseIf CheckBox1.Value = False Then
			TextBox37.Enabled = True
			TextBox38.Enabled = True
			TextBox39.Enabled = True
			Cells(24, 10) = "nein"
		End If
		TextBox37.Value = Round(Cells(20, 10).Value, 3)
		TextBox38.Value = Round(Cells(21, 10).Value, 3)
		TextBox39.Value = Round(Cells(22, 10).Value, 3)
	End With
End Sub                  
<strong>Private Sub TextBox37_Change()</strong>
                        
	With Worksheets("Eingabe").Activate
		If CheckBox1.Value = False Then
			If TextBox37.Value = "" Then
				Cells(20, 10) = 0
			ElseIf Not IsNumeric(TextBox37) Then
				MsgBox "Bitte geben Sie einen Zahlenwert ein.", _
				vbInformation, "Hinweis"
				TextBox37.Value = ""
			Else
				Cells(20, 10) = TextBox37.Value * 1
			End If
		End If
	End With
                        
End Sub
                    
                    
<strong>Private Sub TextBox38_Change()</strong>
                    
	With Worksheets("Eingabe").Activate
		If CheckBox1.Value = False Then
			If TextBox38.Value = "" Then
				Cells(21, 10) = 0
			ElseIf Not IsNumeric(TextBox38) Then
				MsgBox "Bitte geben Sie einen Zahlenwert ein.", _
				vbInformation, "Hinweis"
				TextBox38.Value = ""
			Else
				Cells(21, 10) = TextBox38.Value * 1
			End If
		End If
	End With
                    
End Sub
                    
                    
<strong>Private Sub TextBox39_Change()</strong>
                    
	With Worksheets("Eingabe").Activate
		If CheckBox1.Value = False Then
			If TextBox39.Value = "" Then
				Cells(22, 10) = 0
			ElseIf Not IsNumeric(TextBox39) Then
				MsgBox "Bitte geben Sie einen Zahlenwert ein.", _
				vbInformation, "Hinweis"
				TextBox39.Value = ""
			Else
				Cells(22, 10) = TextBox39.Value * 1
			End If
		End If
	End With
                    
End Sub
                    
                    
<strong>Private Sub CommandButton9_Click()</strong>
                    
'Eine Seite zurück
	MultiPage1.Value = MultiPage1.Value - 1
                    
End Sub
                    
                    
<strong>Private Sub CommandButton10_Click()</strong>
                    
'vor der Berechnung statische Höhe der CFK-Lamelle prüfen
'muss größer/gleich der Querschnittshöhe sein
	If TextBox32.Value = "" Then
		TextBox32.Value = Sheets("Eingabe").Cells(5, 2).Value
                            
		MsgBox "Der Wert für die statische Höhe der aufgeklebten CFK-" _
		&amp; "Lamelle wurde durch die Querschnittshöhe ersetzt.", _
		vbInformation, "Hinweis"
                            
		GoTo SubEnde
	ElseIf TextBox32.Value * 1 &lt; Sheets("Eingabe").Cells(5, 2).Value Then
                            
		MsgBox "Die statische Höhe der aufgeklebten CFK-Lamelle kann " _
		&amp; "nicht geringer als die Querschnittshöhe sein!", vbInformation, _
		"Hinweis"
                            
		TextBox32.Value = Sheets("Eingabe").Cells(5, 2).Value
		Sheets("Eingabe").Cells(4, 10).Value = TextBox32.Value * 1
		GoTo SubEnde
	ElseIf TextBox32.Value * 1 &gt; _
	Sheets("Eingabe").Cells(5, 2).Value + 1.3 Then
	'+1.3 = maximale Lamellendicke + 2 Lagen Kleber (je max 0,5 cm)
                            
		MsgBox "Bitte prüfen Sie die statische Höhe der CFK-Lamelle." &amp; _
		vbNewLine &amp; "maximale statische Höhe: " _
		&amp; Sheets("Eingabe").Cells(5, 2).Value + 1.3, _
		vbInformation, "Hinweis"
                            
		GoTo SubEnde
	Else
	End If
                    
'Information, dass die folgende Berechnung ein paar Minuten dauern kann
	MsgBox "Die Berechnung des genaueren Nachweises der " _
	&amp; "Lamellenkraftänderung am ZRE wird nach bestätigen der Schaltfläche" _
	&amp; " 'OK' durchgeführt. Dieser Vorgang kann einige Minuten dauern.", _
	vbInformation, "Information"
                    
'Arbeitsblätter entsperren
Sheets("Biegenachweis").Unprotect Password:="Masterarbeit"
Sheets("Rissabstand").Unprotect Password:="Masterarbeit"
Sheets("Genauerer_NW").Unprotect Password:="Masterarbeit"
                    
                    
'1. vorhandene Tragfähigkeit MRd,0 berechnen
                        
	With Worksheets("Biegenachweis").Activate
	'A) Stahlversagen (Betondehnung iterieren)
			Range("A11").Value = Range("H6").Value
			Range("C11").Value = Range("K4").Value
                                
			SolverReset
			SolverOk SetCell:="$A$11", MaxMinVal:=1, ValueOf:=0, _
			ByChange:="$A$11", Engine:=1, EngineDesc:="GRG Nonlinear"
                                
			'Nebenbedingungen
			SolverAdd CellRef:="$K$11", Relation:=2, FormulaText:="0"
			SolverAdd CellRef:="$A$11", Relation:=1, FormulaText:="$H$6"
			SolverAdd CellRef:="$A$11", Relation:=3, FormulaText:="0"
                                
			SolverOk SetCell:="$A$11", MaxMinVal:=1, ValueOf:=0, _
			ByChange:="$A$11", Engine:=1, EngineDesc:="GRG Nonlinear"
			SolverSolve (True)
                                
	'B) wenn kein Stahlversagen, dann Betonversagen (Stahldehnung iterieren)
		If Round(Cells(11, 11).Value, 0) &lt;&gt; 0 Then
			Range("A11").Value = Range("H6").Value
			Range("C11").Value = Range("K4").Value
                                
			SolverReset
			SolverOk SetCell:="$C$11", MaxMinVal:=1, ValueOf:=0, _
			ByChange:="$C$11", Engine:=1, EngineDesc:="GRG Nonlinear"
                                
			'Nebenbedingungen
			SolverAdd CellRef:="$K$11", Relation:=2, FormulaText:="0"
			SolverAdd CellRef:="$C$11", Relation:=1, FormulaText:="$K$4"
			SolverAdd CellRef:="$C$11", Relation:=3, FormulaText:="0"
                                
			SolverOk SetCell:="$C$11", MaxMinVal:=1, ValueOf:=0, _
			ByChange:="$C$11", Engine:=1, EngineDesc:="GRG Nonlinear"
			SolverSolve (True)
                                
		End If
	End With
                    
'2. prüfe: Einwirkung größer Widerstand?
	With Sheets("Biegenachweis")
		If Cells(4, 4) &lt;= Cells(11, 12) Then
			MsgBox "Die vorhandene Biegtragfähigkeit ist ausreichend." _
			&amp; " Eine Verstärkungsmaßnahme ist nicht notwendig.", _
			vbInformation, "Information"
			GoTo SubEnde
		End If
	End With
                        
'3. Biegenachweis (Lamellenfläche für einwirkendes Moment)
                        
	With Worksheets("Biegenachweis").Activate
	'A) Lamellenversagen (Betondehnung iterieren)
                            
			Range("A23").Value = Range("H6").Value
			Range("C23").Value = Range("R4").Value
                                
			SolverReset
			SolverOk SetCell:="$P$23", MaxMinVal:=3, ValueOf:=0, _
			ByChange:="$A$23", Engine:=1, EngineDesc:="GRG Nonlinear"
                                
			'Nebenbedingungen
			SolverAdd CellRef:="$N$23", Relation:=2, FormulaText:="0"
			SolverAdd CellRef:="$A$23", Relation:=1, FormulaText:="$H$6"
			SolverAdd CellRef:="$A$23", Relation:=3, FormulaText:="0"
                                
			SolverOk SetCell:="$P$23", MaxMinVal:=3, ValueOf:=0, _
			ByChange:="$A$23", Engine:=1, EngineDesc:="GRG Nonlinear"
			SolverSolve (True)
                                
	'B) Betonversagen (Lamellendehnung iterieren)
		If Round(Range("P23").Value, 0) &lt;&gt; 0 Then
			Range("A23").Value = Range("H6").Value
			Range("C23").Value = Range("R4").Value
                                
			SolverReset
			SolverOk SetCell:="$P$23", MaxMinVal:=3, ValueOf:=0, _
			ByChange:="$C$23", Engine:=1, EngineDesc:="GRG Nonlinear"
                                
			'Nebenbedingungen
			SolverAdd CellRef:="$N$23", Relation:=2, FormulaText:="0"
			SolverAdd CellRef:="$C$23", Relation:=1, FormulaText:="$R$4"
			SolverAdd CellRef:="$C$23", Relation:=3, FormulaText:="0"
                                
			SolverOk SetCell:="$P$23", MaxMinVal:=3, ValueOf:=0, _
			ByChange:="$C$23", Engine:=1, EngineDesc:="GRG Nonlinear"
			SolverSolve (True)
                                
		End If
                                
		If Round(Range("C23").Value, 4) = 0 _
		And Round(Range("P23").Value, 2) &lt;&gt; 0 Then
                                
			MsgBox "Die Einwirkung ist zu groß. Eine Verstärkungs" _
			&amp; "maßnahme mit aufgeklebten CFK-Lamellen lässt sich" _
			&amp; " für diese Einwirkung nicht nachweisen.", _
			vbCritical, "Nachweis nicht möglich!"
                                
			GoTo SubEnde
		End If
	End With
                    
'4. Startwert Lamellenbreite und -dicke
'minimale und maximale Abmessungen berücksichitgen
                        
	'roundup(...,0/5)*5 rundet auf ganzzahlige 5 mm
	Sheets("Eingabe").Range("J16").Value = _
	(Sheets("Biegenachweis").Range("Q23") * 100 / 1.2) / 5
                        
	Sheets("Eingabe").Range("J16").Value = _
	WorksheetFunction.RoundUp(Sheets("Eingabe").Range("J16").Value, 0) * 5
                        
	Worksheets("Eingabe").Range("J15").Value = 1.2
                        
	If Worksheets("Eingabe").Range("J16").Value &gt; _
	(Worksheets("Eingabe").Range("B4").Value - _
	2 * Worksheets("Eingabe").Range("F40").Value) * 10 Then
                            
		Worksheets("Eingabe").Range("J16").Value = _
		(Worksheets("Eingabe").Range("B4").Value - _
		2 * Worksheets("Eingabe").Range("F40").Value) * 10
                            
		Worksheets("Eingabe").Range("J15").Value = _
		WorksheetFunction.RoundUp((Worksheets("Biegenachweis").Range("Q23") _
		* 100 / Worksheets("Eingabe").Range("J16").Value), 1)
                            
		If Worksheets("Eingabe").Range("J15").Value &gt; 3 Then
                                
			MsgBox "Die maximal zulässigen Abmessungen der " _
			&amp; "DAfStb-Richtlinie für die aufgeklebten CFK-Lamellen " _
			&amp; "werden bereits durch den Biegenachweis überschritten.", _
			vbCritical, "Nachweis nicht möglich!"
                                
			Worksheets("Eingabe").Range("J15").Value = 3
			GoTo SubEnde
		End If
                        
	ElseIf Worksheets("Eingabe").Range("J16").Value &lt; 50 Then
		Worksheets("Eingabe").Range("J16").Value = 50
	End If
                    
'5. Verbundnachweis mit kontinuierlicher Steigerung der Lamellenbreite
                    
RunAgain1:
With Worksheets("Genauerer_NW").Activate
	'löschen der vorhandenen Werte
	If Range("A9") &lt; Cells(4, 3) * 100 / 2 - Cells(4, 26) Then
		Rows("9:9").Delete Shift:=xlUp
		GoTo RunAgain1
	Else
		'1.Zeile mit Solver lösen
			Range("J10").Value = 25
			Range("K10").Value = 3.5
RunAgain2:
			SendKeys "{Enter}", True
                                
			SolverReset
			SolverOk SetCell:="$X$10", MaxMinVal:=3, _
			ValueOf:=0, ByChange:="$J$10:$K$10", _
			Engine:=1, EngineDesc:="GRG Nonlinear"
                                
			'Nebenbedingungen
			SolverAdd CellRef:="$W$10", Relation:=2, FormulaText:="0"
			SolverAdd CellRef:="$J$10", Relation:=1, FormulaText:="$K$4"
			SolverAdd CellRef:="$J$10", Relation:=3, FormulaText:="0"
			SolverAdd CellRef:="$K$10", Relation:=1, FormulaText:="$H$6"
			SolverAdd CellRef:="$K$10", Relation:=3, FormulaText:="0"
                                
			SolverOk SetCell:="$X$10", MaxMinVal:=3, _
			ValueOf:=0, ByChange:="$J$10:$K$10", _
			Engine:=1, EngineDesc:="GRG Nonlinear"
			SolverSolve (True)
                                
			If Round(Cells(10, 23), 0) &lt;&gt; 0 _
			Or Round(Cells(10, 24), 0) &lt;&gt; 0 Then
				'teilweise findet Solver bei diesem Wert keine Lösung
				If Round(Range("J10").Value, 3) = 2.174 Then
					Range("J10").Value = 25
				End If
				GoTo RunAgain2
			End If
                                
                                        
		'2.Zeile mit Solver lösen
			Range("J9").Value = 25
			Range("K9").Value = 3.5
RunAgain3:
			SolverReset
			SolverOk SetCell:="$X$9", MaxMinVal:=3, _
			ValueOf:=0, ByChange:="$J$9:$K$9", _
			Engine:=1, EngineDesc:="GRG Nonlinear"
                                
			'Nebenbedingungen
			SolverAdd CellRef:="$W$9", Relation:=2, FormulaText:="0"
			SolverAdd CellRef:="$J$9", Relation:=1, FormulaText:="$K$4"
			SolverAdd CellRef:="$J$9", Relation:=3, FormulaText:="0"
			SolverAdd CellRef:="$K$9", Relation:=1, FormulaText:="$H$6"
			SolverAdd CellRef:="$K$9", Relation:=3, FormulaText:="0"
                                
			SolverOk SetCell:="$X$9", MaxMinVal:=3, _
			ValueOf:=0, ByChange:="$J$9:$K$9", _
			Engine:=1, EngineDesc:="GRG Nonlinear"
			SolverSolve (True)
                                
			If Round(Cells(9, 23), 0) &lt;&gt; 0 _
			Or Round(Cells(9, 24), 0) &lt;&gt; 0 Then
				'teilweise findet Solver bei diesem Wert keine Lösung
				If Round(Range("J9").Value, 3) = 2.174 Then
					Range("J9").Value = 25
				End If
				GoTo RunAgain3
			End If
                                
RunAgain4:
		'einfügen und lösen bis zum Auflager (x = 0)
			Rows("9:9").Select
			Selection.Insert Shift:=xlDown
			Range("A10:AI10").Copy
			Range("A9").Select
			ActiveSheet.Paste
			Application.CutCopyMode = False
RunAgain5:
			SolverReset
			SolverOk SetCell:="$X$9", MaxMinVal:=3, _
			ValueOf:=0, ByChange:="$J$9:$K$9", _
			Engine:=1, EngineDesc:="GRG Nonlinear"
                                
			'Nebenbedingungen
			SolverAdd CellRef:="$W$9", Relation:=2, FormulaText:="0"
			SolverAdd CellRef:="$J$9", Relation:=1, FormulaText:="$K$4"
			SolverAdd CellRef:="$J$9", Relation:=3, FormulaText:="0"
			SolverAdd CellRef:="$K$9", Relation:=1, FormulaText:="$H$6"
			SolverAdd CellRef:="$K$9", Relation:=3, FormulaText:="0"
                                
			SolverOk SetCell:="$X$9", MaxMinVal:=3, _
			ValueOf:=0, ByChange:="$J$9:$K$9", _
			Engine:=1, EngineDesc:="GRG Nonlinear"
			SolverSolve (True)
                                
			If Round(Cells(9, 23), 0) &lt;&gt; 0 _
			Or Round(Cells(9, 24), 0) &lt;&gt; 0 Then
				'teilweise findet Solver bei diesem Wert keine Lösung
				If Round(Range("J9").Value, 3) = 2.174 Then
					Range("J9").Value = 25
				End If
				GoTo RunAgain5
			End If
                                                        
		'in jeder Zeile prüfen, ob Verbundnachweis erfüllt ist
		'sonst Lamellenbreite erhöhen und neue Berechnung starten
		'wenn maximale Lamellenbreite erreicht ist, Lamellendicke steigern
		'wenn bL,max = b - 2 * cnom und tL,max = 3,0 mm NW nicht erfüllt
			If Worksheets("Genauerer_NW").Cells(4, 43) &gt; 1 Then
                                    
				If Worksheets("Eingabe").Cells(16, 10).Value + 5 &lt;= _
				(Worksheets("Eingabe").Cells(4, 2).Value - 2 _
				* Worksheets("Eingabe").Cells(40, 6).Value) * 10 Then
                                        
					Worksheets("Eingabe").Cells(16, 10).Value = _
					Worksheets("Eingabe").Cells(16, 10).Value + 5
                                        
					GoTo RunAgain1
                                        
				ElseIf Worksheets("Eingabe").Cells(15, 10).Value _
				+ 0.1 &lt;= 3 Then
                                        
					'tL bis 3,0mm vergrößern
					Worksheets("Eingabe").Cells(15, 10).Value = _
					Worksheets("Eingabe").Cells(15, 10).Value + 0.1
				
					GoTo RunAgain1
				Else
                                        
					'NW kann nicht erfüllt werden
					MsgBox "Der Nachweis der Lamellenkraftänderung am " _
					&amp; "ZRE kann mit aufgeklebten CFK-Lamellen NICHT " _
					&amp; "erfüllt werden!", vbCritical, _
					"MAXIMALE ABMESSUNGEN DER LAMELLE ERREICHT !"
                                        
					GoTo SubEnde
				End If
			End If
                            
		If Range("A9") = 0 And Cells(4, 43) &lt;= 1 Then
			MsgBox "System: " &amp; Worksheets("Eingabe").Cells(3, 10) _
			&amp; vbNewLine &amp; vbNewLine &amp; "erforderliche Fläche: " _
			&amp; Round(Worksheets("Genauerer_NW").Cells(4, 21), 2) _
			&amp; " cm²" &amp; vbNewLine &amp; "erforderliche Breite: " _
			&amp; Round(Worksheets("Genauerer_NW").Cells(4, 19), 0) _
			&amp; " mm" &amp; vbNewLine &amp; "erforderliche Dicke: " _
			&amp; Round(Worksheets("Genauerer_NW").Cells(4, 20), 1) _
			&amp; " mm", vbOKOnly + vbInformation, "Nachweis erfüllt."
		Else
			GoTo RunAgain4
		End If
	End If
                    
End With
                    
Unload UserForm1
                    
SubEnde:
                    
'Arbeitsblätter sperren
Sheets("Biegenachweis").Protect Password:="Masterarbeit"
Sheets("Rissabstand").Protect Password:="Masterarbeit"
Sheets("Genauerer_NW").Protect Password:="Masterarbeit"
                    
End Sub
</code></pre>
         
         </div>
   </body>
</html>